
計算機程式作業


================================================================================================
Array  20
================================================================================================
01.整數的交集聯集

請設計程式，利用兩個一維整數陣列儲存兩個正整數集合 A, B ，
兩個集合 A, B 的陣列大小為 20，正整數 1~100；
程式功能為：
(1) 新增集合元素：輸入一集合與一正整數，若新增的元素與該集合內元素有重複，
則無法新增。
(2) 刪除集合元素：輸入一集合與一正整數，若集合中無該元素，無法刪除。
(3) 計算集合是否空集合。
(4) 計算兩個集合的交集。
(5) 計算兩個集合的聯集。
(6) 計算集合是否為另一個集合的子集合。

------------------------------
輸入說明:

每一行第一數字輸入整數指令選項，意義如下:
0: 結束exit
1: 清空 A，輸出 A 和 B 的內容。
2: 清空 B，輸出 A 和 B 的內容。
3: 新增元素到 A，後面接一個正整數為要插入的元素，
輸出 A 和 B 的內容。
4: 新增元素到 B，後面接一個正整數為要新增的元素，
輸出 A 和 B 的內容。
5: 從 A 刪除一個元素，後面接一個正整數為要刪除的元素，
輸出 A 和 B 的內容。
6: 從 B 刪除一個元素，後面接一個正整數為要刪除的元素。
輸出 A 和 B 的內容。
7: 輸出 A, B 聯集。
8: 輸出 A, B 交集。
9: 輸出 A 是否為 B 的子集合，若是則輸出 1 ，否則輸出 0。


輸出說明:

輸出集合格式
集合名稱:[集合元素,集合元素,...]，中間沒有空白，
元素順序依照輸入先後順序。
交集與聯集的元素順序，先以A的元素順序再以B的元素順序。
每一指令輸出一行。


----------------
輸入範例:
3 4
3 7
4 8
4 9
5 4
6 8
3 8
7
8
9
0

輸出範例:
A:[4,]B:[]
A:[4,7,]B:[]
A:[4,7,]B:[8,]
A:[4,7,]B:[8,9,]
A:[7,]B:[8,9,]
A:[7,]B:[9,]
A:[7,8,]B:[9,]
[7,8,9,]
[]
0

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
02. 撲克牌

撲克牌四種花色分別是黑桃、紅心、磚塊、梅花，定義 0~3。

撲克牌數字1~13，與四種花色共有52張牌。

編碼規則為數字+花色，例如 10 表示黑桃 A、72 表示磚塊 7，123 表示梅花 3。


撲克牌遊戲把單一張牌命名為單張，沒有任何花色牌型，編號 0。

兩張數字一樣的命名為 Pair，編號 1。

2 組 pair 的牌稱為 Two pair，編號 2。

三張一樣的稱為 Three of a Kind，編號 3。

Three of a Kind 加一個 Pair 稱為 Full House，編號 4。

四張一樣稱為 Four Of A Kind，編號 5。

數字連續的5張牌稱為 Straight，包括 13 ,1, 2, 3, 4也是，編號 6。

數字連續的5張且花色一樣稱為 Straight Flush，編號 7。



輸入5張撲克牌，判斷哪一類型的牌形編號(1~7)。

程式必須有以下function。

void judge(int data[], int *r);

data[0]~data[4]為輸入 5 張撲克牌，r 為哪一類型的牌形編號(1~7)。


輸入說明 ：

第一列輸入為5個整數分別由空格分開，表示5張撲克牌。

輸出說明 ：

輸出為一個1~7的整數，代表牌型編號，以指標變數傳出。

----------------------
輸入範例

90 82 83 81 92

輸出範例

4

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
03.多項式相加減

讓使用者輸入兩個一元多項式,程式輸出相加減乘的結果

一元多項式 就是只有一個變數(例如x)的多項式 最高次方不限 不一定所有次方項都會出現
各項的: 係數都當作整數(可正可負) 和 次方數都當作正整數 即可
多項式加法 就是將兩個多項式中 變數的次方相同的項的係數相加
多項式減法 就是將兩個多項式中 變數的次方相同的項的係數相減
多項式乘法 就是將兩個多項式中 每一個項數與另一個多項式的每一個項數相乘
使用者依序(高次項->低次項)輸入各項
係數為0(不出現)的項目當然不需輸入
輸出時請依序(高次項->低次項)輸出各項，係數為零者不需輸出，係數為一者請省略1直接輸出未知數(EX: X,X^2等)
多項式的各項與運算符號請用空白隔開如輸出範例

例如：
2乘以(x的3次方) 寫作 2x^3
x的1次方 寫作 x

則
4x^3 - 2x + 3 <-最高項為3次方項
+) -2x^5 - x^3 + 3x^2 - x - 1 <-最高項為5次方項
________________________________________
-2x^5 + 3x^3 + 3x^2 - 3x + 2

(PS:若首項有負號,負號後不須空格,如上方例子結果的-2x^5)
---------------

輸入說明：
輸入第一行 符號 + - * 判斷多項式的運算模式
輸入第二行 運算多項式1 (多項式的各項與運算符號請用空白隔開，0次項不顯示)
輸入第三行 運算多項式2 (多項式的各項與運算符號請用空白隔開，0次項不顯示)

輸出範例：
輸出運算結果的多項式，依序(高次項->低次項)輸出各項，係數為零者不需輸出，係數為一者請省略係數直接輸出未知數(EX: X,X^2等)，多項式的各項與運算符號請用空白隔開如輸出範例

[範例輸入]
+
4x^3 - 2x + 3
-2x^5 - x^3 + 3x^2 - x - 1

[範例輸出]
-2x^5 + 3x^3 + 3x^2 - 3x + 2

[範例輸出]
-
5x^3 + 4x^2 + 3
3x^2 + x + 9

[範例輸出]
5x^3 + x^2 - x - 6

[範例輸出]
*
5x + 3
3x + 9

[範例輸出]
15x^2 + 54x + 27

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
04. 以陣列實做長整數的運算

將長整數儲存於一維陣列，長度為60位。
計算兩數的相加、相減、相乘。

輸入說明:
兩個小於60位數的數字

輸出說明
兩數的相加、相減、相乘結果
------------------------------------------
輸入範例:
74678186416540450856046456406565453745354346846
42541264516146186481412634534534535674461
輸出範例:
74678228957804967002232937819199988279890021307
74678143875275934709859974993930919210818672385
3176904481932122418791481787372835129458102253511598206541415533747989064100764738100006


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
05. 以陣列實做長小數的運算

將長小數(包含整數部位與小數部位)，整數位數不超過60位，小數位數也不超過60位。
計算兩小數的相加、相減、相乘。

輸入說明:
輸入兩個小數數字
輸入N，表示兩小數計算後結果顯示到小數點後第N位
例如:N=15，表示2小數計算後的結果只需顯示到小數點後第15位

輸出說明:
輸出兩小數的相加、相減、相乘結果到小數點後第N位
---------------------------------------------------
輸入範例:
65343418641654045085604645640656546846.556486456415648646887416
214626641264516146186481412635674461.941874911456152601406410561641
12
輸出範例:
65558045282918561231791127053292221308.498361367871
65128792000389528939418164228020872384.614611544959
14024438471799379658526098633943699458449060884862983183352754662019100618.818644674529


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
06.計算全班成績以及畫出長條圖

首先先輸入全班的學號(全班人數最多90人，學號為整數)、以及每個人的CS和PG成績(成績為整數，分數最高為100分)，


程式可以執行的功能分成7大類:
1: 查某人成績。
2: 查最高分。
3: 查最低分。
4: 查不及格。
5: 查及格。
6: 查前3名。
7: 統計。

每類又有2~3個小功能

第1大類(透過學號查某人成績):
1:查詢某人平均成績
2:查詢某人CS成績
3:查詢某人PG成績

第2大類(查最高分):
1:查詢最高分平均成績
2:查詢CS最高成績
3:查詢PG最高成績

第3大類(查最低分):
1:查詢最低分平均成績
2:查詢CS最低成績
3:查詢PG最低成績

第4大類(查不及格):此部分需顯示學號和成績，輸出方式為學號由小到大
1:查詢平均成績不及格
2:查詢CS成績不及格
3:查詢PG成績不及格

第5大類(查及格):此部分需顯示學號和成績，輸出方式為學號由小到大
1:查詢平均成績及格
2:查詢CS成績及格
3:查詢PG成績及格

第6大類(查前3名):此部分需顯示學號和成績，輸出方式為按照名次由小到大
1:查詢平均成績前三名
2:查詢CS成績前三名
3:查詢PG成績前三名

第7大類(統計):
1:統計全班平均成績的中位數
2:畫出全班平均成績的長條圖


輸入說明:

首先先輸入全班的學號、每個人的CS和PG成績，輸入-1表示全班成績輸入完畢。

所有的成績計算，小數部分都無條件捨去。

接著輸入2個整數指令選項，第1個整數表示執行哪一大類，第2個整數表示要執行該大類哪一個功能:


輸出說明:

印出程式執行的結果
------------------------------
輸入範例:
104233555 85 96
103233555 56 66
102233555 38 5
101233555 21 12
100233555 68 76
-1
1
1
103233555
輸出範例:
61
-------------------------------
輸入範例:
104233555 85 96
103233555 56 66
102233555 38 5
101233555 21 12
100233555 68 76
-1
2
2
輸出範例:
85
-------------------------------
輸入範例:
104233555 85 96
103233555 56 66
102233555 38 5
101233555 21 12
100233555 68 76
-1
3
3
輸出範例:
5
-------------------------------
輸入範例:
104233555 85 96
103233555 56 66
102233555 38 5
101233555 21 12
100233555 68 76
-1
4
1
輸出範例:
101233555:16
102233555:21
-------------------------------
輸入範例:
104233555 85 96
103233555 56 66
102233555 38 5
101233555 21 12
100233555 68 76
-1
5
2
輸出範例:
100233555:68
104233555:85
-------------------------------
輸入範例:
104233555 85 96
103233555 56 66
102233555 38 5
101233555 21 12
100233555 68 76
-1
6
3
輸出範例:
1st:104233555 96
2nd:100233555 76
3rd:103233555 66
-------------------------------
輸入範例:
104233555 85 96
103233555 56 66
102233555 38 5
101233555 21 12
100233555 68 76
-1
7
1
輸出範例:
61
-------------------------------
輸入範例:
104233555 85 96
103233555 56 66
102233555 38 5
101233555 21 12
100233555 68 76
-1
7
2
輸出範例:
0-10:
11-20:*
21-30:*
31-40:
41-50:
51-60:
61-70:*
71-80:*
81-90:*
91-100:


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
07.

判斷N個三角形有幾個三角形相交

讓使用者輸入N個三角形的座標,程式輸出N個三角形中有幾個三角形相交

輸入說明:
先輸入一個正整數N代表之後要輸入多少個三角形
再輸入每個三角形的三個點座標
座標都是整數

輸出說明:
印出有幾個三角形相交

input:
4
2 2
4 2
4 4
2 1
3 1
3 3
3 3
6 3
3 7
1 5
7 5
4 13

output:
4

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

08.判斷N個三角形相交於幾點

讓使用者輸入N個三角形的座標,程式輸出N個三角形中相交於幾點
輸入說明:
先輸入一個正整數N代表之後要輸入多少個三角形
再輸入每個三角形的三個點座標
座標都是整數

輸出說明:
印出相交於幾點

input:
4
2 2
4 2
4 4
2 1
3 1
3 3
3 3
6 3
3 7
1 5
7 5
4 13

output:
6

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
09.

一個有括號的多項式 +, -, *,判斷括號是否有對稱，若有對稱，
把最底層的括號的運算式與運算值印出

輸入說明:
輸入有括號的多項式，例如:(((2+5)+2)*3)

輸出說明:
若括號有對稱，印出最底層的括號的運算式與運算值

若括號沒有對稱，則印出ERROR INPUT

input:
(((2+5)+2)*3)

output:
2+5
7

input:
(((2+5)+2)*3

output:
ERROR INPUT



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10.

求N個三角形相交座標

讓使用者輸入N個三角形的座標,程式輸出N個三角形中相交座標
輸入說明:
先輸入一個正整數N代表之後要輸入多少個三角形
再輸入每個三角形的三個點座標
座標都是整數

輸出說明:
印出相交的座標，座標先從x的值判斷由小到大印出
若x值一樣，則再根據y的值判斷由小到大印出

input:
2
-2 2
-2 0
0 2
-3 1
-1 1
-3 2

output:
(-2,1)
(-2,3/2)
(-1,1)


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
11.

三種排序法比較

輸入說明
輸入一串未經排序的整數數字，數量小於20，結束時輸入-999
接著輸入數字0代表由小到大排序，輸入1代表由大到小排序。

輸出說明
利用Bubble Sort, Insertion Sort, Selection Sortn三種排序方法，
輸出排序完成的數字與三種排序所執行的交換次數。

input:
1 781 848 7 4 99 11 44 88 90 111 11 54 12 55 -999
0

output:
1 4 7 11 11 12 44 54 55 88 90 99 111 781 848
Bubble Sort change times = 48
Insertion Sort change times = 48
Selection Sort change times = 12

----------------------------------
input:
1 3 5 7 9 11 13 15 17 -999
1

output:
17 15 13 11 9 7 5 3 1
Bubble Sort change times = 36
Insertion Sort change times = 36
Selection Sort change times = 4

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
12.

設一個 nxn 的矩陣，由左而右，由上而下標示自1到 nxn 的數，如下圖為 4x4的。
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
讀入旋轉序列後，將該矩陣的資料輸出。
下圖中，表示向右旋轉一次。
13 9 5 1
14 10 6 2
15 11 7 3
16 12 8 4
下圖表示將圖向左旋轉一次，
4 8 12 16
3 7 11 15
2 6 10 14
1 5 9 13
下圖表示將圖上下對翻一次。
13 14 15 16
9 10 11 12
5 6 7 8
1 2 3 4
------------------------------
輸入說明 ：
首先輸入一個正整數 n, n<10，表示一個 nxn 的矩陣。
接著輸入一串矩陣想要執行的功能的參數，參數的數量不超過80，參數輸入完畢時輸入F
R:表示矩陣向右旋轉
L:表示矩陣向左旋轉
N:表示矩陣上下對翻
------------------------------
輸出說明 ：
由左而右，由上而下，輸出經過旋轉後的排列。每筆測試資料共輸出 n 行，每行 n 個整數，
每筆資料間以空行隔開。
------------------------------
Sample Input:
3
R R N R L L R L N R L L L F

Sample output:
7 4 1
8 5 2
9 6 3
------------------------------
Sample Input:
2
R L L R N N F

Sample output:
1 2
3 4

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
13.

數獨的規則
輸入一個9*9的數字矩陣，其中每個元素均為0～9，其中0代表該格尚未填入數字。
請撰寫一支程式判斷該矩陣中，0 應該出現甚麼數字。數獨的規則如下：
(1)矩陣中的每一列（9個元素）只能出現1~9至多各一次。
(2)矩陣中的每一行（9個元素）只能出現1~9至多各一次。
(3)9個3*3的小矩陣（9個元素），亦分別只能出現1~9至多各一次。
-----------------------------------
輸入說明 ：
9*9的數字矩陣，其中每個元素均為0～9, 0代表該格尚未填入數字.
-----------------------------------
輸出說明 ：
從上到下，從左到右，輸出 0 的位置與數字。
-----------------------------------
Sample Input:
023456789
456789123
789123456
231564897
564897231
897231564
312605978
645978312
908312645

Sample Output:
0 0 1
6 4 4
8 1 7

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
14.

猜數字

(1) 程式的使用者設定一個答案 X，四位數，0~9不重複。
(2) 程式的使用者輸入 N 個 4 位數字，Y1, ..., YN，4<=N<=10，
    以及這些 4 位數與答案 X 的相似程度。
(3) 程式必須根據相似程度資料，輸出使用者設定的答案 X。

相似程度的規則
(1) Yi 中有 1 位數字跟答案 X 一樣，且所在位置相同，例如千位對千位，或百位對百位，記為 1A。
    若 2 位都有這情況，就是2A。
    例如 X=1234，Y1=1856，兩者都有 1 ，位置都在千位，因此相似程度是 1A。
(2) Yi 中有 1 位數字跟答案 X 一樣，但所在位置不同，記為 1B。若 2 位都有這情況，就是2B。
    例如 X=1234，Y1=8561，兩者都有 1，但位置不同，所以是 1B。
(3) 以上兩條規則以 (1)優先，之後再考慮 (2)。

----------------
輸入範例說明:

每一行輸入 4 位數字 Yi，以及相似程度 ?A?B。
輸入的行數 N<=10。

假設使用者設定的答案是 4237

輸入
1968,0A0B    數字都沒有對，所以相似程度為 0A0B。
7052,0A2B    有 2 個數字對 (7, 2) ，但位置不對，相似程度為 0A2B。
2347,1A3B    有 1 個數字對且位置對 (7)， 3 個數字對 (2, 3, 4)，相似程度為1A3B。
3427,1A3B    有 1 個數字對且位置對 (7)， 3 個數字對 (3, 4, 2)，相似程度為1A3B。
2473,0A4B    4 個數字對，位置不對。


輸出範例說明:
4237 輸出使用者設定的答案

Sample Input

1968,0A0B
7052,0A2B
2347,1A3B
3427,1A3B
2473,0A4B

Sample Outpt
4237

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
15.

臺北科大宿舍商店賣 20項商品，分別編號 {1, 2, 3, 4, ..., 20}。
同學來買商品最多五項，最少一項。
一天最多有一千筆資料。
請分析哪兩筆資料是最多人一起購買，以作為老闆擺放商品的依據。


輸入說明
第一行為購買資料筆數
第二行之後為每筆購買商品編號，編號未依大小順序，中間以逗號隔開


輸出說明
兩個編號以及出現次數，中間以逗號隔開，編號從小到大出現

測試資料(Test case: input)

7
1,3,5,7,9
2,3
1,3,5
4,7
7,9
3,5,7
9,1

測試資料(Test case: output)
3,5,3


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16.
賓果遊戲

假設一個簡單的兩人賓果遊戲，每位玩家各自輸入一個九宮格，九個數字N1,N2,…N9，
且Ni<>Nj當i<>j，而1<=Ni, Nj<=9，1<=i, j<=9。

N1 N2 N3
N4 N5 N6
N7 N8 N9

電腦從1~9的整數中選三個數字C1、C2、C3，且Ci<>Cj當i<>j，而1<=Ci, Cj<=9, 且 1<=i, j<=3。

獲勝情況有三種，第一位玩家贏，第二位玩家贏、和平手。

當這三個數字，只在一位玩家的九宮格中，成一條水平線，如上圖的N1,N2,N3、垂直線，如圖中的N1,N4,N7，
或對角線，如圖中的N1,N5,N9，則該玩家獲勝。否則平手。
請寫出一個程式，展現電腦判斷此兩人遊戲獲勝情況。


輸入說明:
輸入多組測試案例，每個測試案例為一次賓果遊戲，格式：
第一行為九個數值介於1到9且相異的整數，每個數字間隔一個空格，表示第一位玩家填寫的九宮格，對應圖中N1,N2,…N9。
第二行為九個數值介於1到9且相異的整數，每個數字間隔一個空格，表示第二位玩家填寫的九宮格，對應圖中N1,N2,…N9。
第三行為三個數值介於1到9且相異的整數，每個數字間隔一個空格，表示電腦選擇的三個數字。
每一組測試案例以 0 間隔。
最後以 -1 結束。

輸出說明:
每一行為每一個測試案例的執行結果，即每一場賓果遊戲的獲勝情形。
若為玩家一獲勝，顯示 Player1 wins；
若為玩家二獲勝，顯示 Player2 wins；
若平手，則顯示 Draw。

Sample Input:
1 2 3 4 5 6 7 8 9
9 8 7 6 5 4 3 2 1
1 2 3
0
1 4 2 5 6 7 3 8 9
9 8 4 7 6 3 5 2 1
2 7 9
0
9 4 2 5 6 1 3 8 7
9 8 4 3 6 7 5 2 1
9 4 8
-1

Sample Output:
Draw
Player1 wins
Player2 wins


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
17.

字串解密碼

老張是有錢大地主，他將所有金銀財寶都收藏在一個藏寶箱裡，藏寶箱要輸入正確密碼才能開啟。
寶箱密碼寫在一卷捲軸，捲軸內有兩行，由數字 0~9 和大小寫英文字母、標點符號、空格組成。
解碼方式是將出現在第一行文章的連續數字取出反轉，將所有反轉後的數字相加，
超過四位數，取四位數(小於10000)，不足四位數，前面取0，即可取得第一組四位數密碼。
第二組四位數密碼是將第二行文章分析字元出現頻率，找出小於10的前四個數字，
數字排列依該字元出現次序。

例如 :

Today is my 45 birthday, There are 65 guest coming for the 1000 party,
I got 789 gifts to open.
Object-oriented programming is a programming paradigm
based on the concept of objects, a app, xxxxxxxxxxx.

第一行取出其中數字 45, 65, 1000, 789， 分別作反轉後相加。54+56+1+987+0=1098 ，
第一組密碼即為 1098。
第二行分析字元頻率，(e, 7), (o,7), (r, 6), (a, 8)，第二組密碼即為 7768，
其中(x, 11)超過10不予計算。

-----------------------------------------------------
輸入說明 ：

輸入二行文章，含有大小寫英文字母，數字0~9、空格、標點符號。

-----------------------------------------------------
輸出說明 ：

八位數字輸出於一行。

-----------------------------------------------------
Sample Input

Today is my 45 birthday, There are 65 guest coming for the 1000 party,
I got 789 gifts to open.
Object-oriented programming is a programming paradigm based on the concept of objects,
a app, xxxxxxxxxxx.

-----------------------------------------------------
Sample Outout
10987768

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

18.

輸入一篇英文文章，只有26個英文字母大小寫，以及空白，沒有標點符號、沒有數字。

輸入所有定義虛詞 P1, P2, ..., Pn ，直到Pn="-1"為止。

(1)扣除所有虛詞之後，統計其餘字數。
(2)分析所有虛詞的頻率，依頻率由大自小排序， 頻率相同則以虛詞依字典排序自小而大輸出。

------------------------------------
輸入格式說明

輸入所有定義虛詞，"-1"表示結束虛詞輸入。
輸入一篇英文文章。

------------------------------------

輸出格式說明

第一行是，扣除虛詞的字數。
第二行以後是排序過的虛詞，以及出現的次數。

----------------------------------
Sample input

is
a
of
This
That
-1
This is a book That is a cook


--------------------------------
Sample output

book That cook
3
a 2
is 2
This 1

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
19.

英文字分析、取代、插入、刪除


輸入一篇英文文章 A，文章中英文字以一個空白間隔。另外輸入 2 個英文字(word) P、Q。
(1) 將文章 A 中 P 字串以 Q 字串取代，並輸出。
(2) 在文章 A 中 P 字串前插入 Q 字串，並輸出。
(3) 將文章 A 中 P 字串刪除，並輸出。
(4) 分析文章 A 所有英文字 (word) 的頻率，依頻率由大自小排序，
頻率相同則以 word由小自大排序(That > This....)輸出。


輸入範例說明:
第一行，文章 A
第二行，英文字 P
第三行，英文字 Q


輸出範例說明:
第一行，文章 A 將 P 替換成 Q。
第二行，文章 A 將 Q 插入 P 前面。
第三行，文章 A 將 P 刪除。
第四行之後，每一行依序為英文字、出現頻率次數，中間以逗號間隔。

Sample Input

This is a book That is a cook
is
was

Sample Outpt

This was a book That was a cook
This was is a book That was is a cook
This a book That a cook
a 2
is 2
That 1
This 1
book 1
cook 1

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

20.

輸入一段英文文章，比對文章中是否有某一個英文單字 P。
文章中若有英文單字 P，將 P 左右(或稱前後) N 個單字輸出。

其中，1<= N <=5。
輸入的文章只包含 a~z, A~Z，以及空白字元。
比對英文單字 P時，大小寫視為相同。

輸出結果要依據字典遞增順序排列輸出。
其排序規則為:
1. 若輸入排序指令 L，則依左邊的單字排序。
2. 若輸入排序指令 R，則依右邊的單字排序。
3. 排序所根據的單字，依據跟單字 P 距離的遠近，由近至遠比較排序。


輸入說明:
---------------
第一行，單字 P，以及 N，和排序指令 L/R。
第二行之後為待比對的英文文章。


輸出說明
-------------------
依排序指令 L/R 輸出。
單字 P ，其字母要全部大寫，其餘單字全部小寫。
比對到左或右文若不足 N 個單字，則全數列出。


例如，輸入

man 3 L
Descent of Man
He Look Like an Apple Man and Pie can be eat

英文文章第一行 Man 左右邊不足 3 個單字，所以輸出 Descent of Man
英文文章第二行 Man 左右邊超過 3 個單字，所以輸出 Like an Apple Man and Pie can
排序後，處理大小寫，輸出


like an apple MAN and pie can
descent of MAN

其中，MAN 的右邊第一個字分別是 of, apple,
因為 apple 排序在 of 前面，所以
like an apple MAN and pie can 先輸出。

Sample Input
---------------

Man 3 L
Descent of Man The Ascent of Man The Old Man and The Sea A Portrait of The Artist As a Young Man


Sammple Output
----------------------------
the ascent of MAN the old man
descent of MAN the ascent of
man the old MAN and the sea
as a young MAN

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

21.
定時 K 彈

N 人圍成一個圈，由 1 號依序到 N 號。
從 1 號開始依序傳遞一枚玩具炸彈，炸彈每次到第 M 個人就爆炸，此人即淘汰。
被淘汰的人要離開遊戲。遊戲從淘汰者下一個開始傳遞。
這枚炸彈會爆炸 K 次，在第 K 次爆炸後遊戲停止。
此時第 K 個淘汰者的下一位遊戲者稱為幸運者。
例如 N=5，M=2，如果 K=2，炸彈會爆炸兩次，爆炸淘汰順序依序是 2 與 4，
此時 5 號是 幸運者。
如果 K=3，剛才遊戲繼續，第三個淘汰是 1 號，幸運者是 3 號。
如果 K=4，下一輪淘汰 5 號， 3 號是幸運者。
給定 N、M 與 K，請寫程式計算出誰是幸運者。


輸入說明:

輸入一行包含三個正整數，依序為 N、M 與 K，兩數中間有一個空格分開。
其中1 ? K<N。

輸出說明:
依序輸出淘汰者，最後輸出幸運者號碼

範例輸入:

5 2 4
範例輸出:

2 4 1 5 3
